"use strict";(self.webpackChunkpabpereza=self.webpackChunkpabpereza||[]).push([[8084],{50276:(e,o,s)=>{s.r(o),s.d(o,{assets:()=>d,contentTitle:()=>t,default:()=>u,frontMatter:()=>a,metadata:()=>c,toc:()=>i});var n=s(17624),r=s(4552);const a={},t=void 0,c={id:"notas/Kubernetes/recursos_personalizados",title:"recursos_personalizados",description:"La definici\xf3n de recursos personalizados o (CRD, Custom Resource Definition) es una de las caracter\xedsticas m\xe1s potentes de Kubernetes. Nos permite extender la funcionalidad de Kubernetes a\xf1adiendo nuevos tipos de recursos. Estos recursos pueden ser usados por los desarrolladores para definir sus propias abstracciones de alto nivel.",source:"@site/docs/notas/Kubernetes/recursos_personalizados.md",sourceDirName:"notas/Kubernetes",slug:"/notas/Kubernetes/recursos_personalizados",permalink:"/docs/notas/Kubernetes/recursos_personalizados",draft:!1,unlisted:!1,editUrl:"https://github.com/pabpereza/pabpereza/tree/main/docs/notas/Kubernetes/recursos_personalizados.md",tags:[],version:"current",frontMatter:{},sidebar:"notas",previous:{title:"pv_pvc",permalink:"/docs/notas/Kubernetes/pv_pvc"},next:{title:"replicasets",permalink:"/docs/notas/Kubernetes/replicasets"}},d={},i=[{value:"Consultar recursos personalizados",id:"consultar-recursos-personalizados",level:2},{value:"Definir un recurso personalizado",id:"definir-un-recurso-personalizado",level:2},{value:"Crear un objeto de un recurso personalizado",id:"crear-un-objeto-de-un-recurso-personalizado",level:2}];function l(e){const o={code:"code",h2:"h2",p:"p",pre:"pre",...(0,r.M)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(o.p,{children:"La definici\xf3n de recursos personalizados o (CRD, Custom Resource Definition) es una de las caracter\xedsticas m\xe1s potentes de Kubernetes. Nos permite extender la funcionalidad de Kubernetes a\xf1adiendo nuevos tipos de recursos. Estos recursos pueden ser usados por los desarrolladores para definir sus propias abstracciones de alto nivel."}),"\n",(0,n.jsx)(o.h2,{id:"consultar-recursos-personalizados",children:"Consultar recursos personalizados"}),"\n",(0,n.jsxs)(o.p,{children:["Podemos consultar los recursos personalizados usando el comando ",(0,n.jsx)(o.code,{children:"kubectl get"}),":"]}),"\n",(0,n.jsx)(o.pre,{children:(0,n.jsx)(o.code,{className:"language-bash",children:"kubectl get crd --all-namespaces\n"})}),"\n",(0,n.jsxs)(o.p,{children:["Es muy normal que aparecen recursos personalizados que no hemos definido nosotros. Estos recursos son definidos por otros componentes de Kubernetes. Por ejemplo, el componente ",(0,n.jsx)(o.code,{children:"metrics-server"})," define el recurso ",(0,n.jsx)(o.code,{children:"pods.metrics.k8s.io"}),". O por ejemplo, los componentes de ",(0,n.jsx)(o.code,{children:"calico"})," definen el recurso ",(0,n.jsx)(o.code,{children:"networkpolicies.crd.projectcalico.org"}),"."]}),"\n",(0,n.jsxs)(o.p,{children:["Podemos obtener detalles de un recurso personalizado usando el comando ",(0,n.jsx)(o.code,{children:"kubectl describe"}),":"]}),"\n",(0,n.jsx)(o.pre,{children:(0,n.jsx)(o.code,{className:"language-bash",children:"kubectl describe crd <nombre del recurso>\n"})}),"\n",(0,n.jsx)(o.h2,{id:"definir-un-recurso-personalizado",children:"Definir un recurso personalizado"}),"\n",(0,n.jsx)(o.p,{children:"Para definir un recurso personalizado, debemos crear un fichero YAML con la definici\xf3n del recurso. Por ejemplo, para definir un recurso personalizado de ejemplo:"}),"\n",(0,n.jsx)(o.pre,{children:(0,n.jsx)(o.code,{className:"language-yaml",children:"apiVersion: apiextensions.k8s.io/v1beta1\nkind: CustomResourceDefinition\nmetadata:\n  name: crontab.example.com\nspec:\n  group: example.com\n  versions:\n    - name: v1\n\t  served: true\n\t  storage: true\n\t  schema:\n\t    openAPIV3Schema:\n\t\t  type: object\n\t\t  properties:\n\t\t    spec:\n\t\t\t  type: object\n\t\t\t  properties:\n\t\t\t    cronSpec:\n\t\t\t\t  type: string\n\t\t\t\timage:\n\t\t\t\t  type: string\n\t\t\t\treplicas:\n\t\t\t\t  type: integer\n  scope: Namespaced\n  names:\n\tplural: crontabs\n\tsingular: crontab\n\tkind: CronTab\n\tshortNames:\n\t  - ct\n"})}),"\n",(0,n.jsxs)(o.p,{children:["Podemos crear el recurso personalizado usando el comando ",(0,n.jsx)(o.code,{children:"kubectl create"}),":"]}),"\n",(0,n.jsx)(o.pre,{children:(0,n.jsx)(o.code,{className:"language-bash",children:"kubectl create -f crontab.yaml\n"})}),"\n",(0,n.jsx)(o.h2,{id:"crear-un-objeto-de-un-recurso-personalizado",children:"Crear un objeto de un recurso personalizado"}),"\n",(0,n.jsx)(o.p,{children:"Para crear un objeto de un recurso personalizado, debemos crear un fichero YAML con la definici\xf3n del objeto. Por ejemplo, para crear un objeto de ejemplo:"}),"\n",(0,n.jsx)(o.pre,{children:(0,n.jsx)(o.code,{className:"language-yaml",children:'apiVersion: "example.com/v1"\nkind: CronTab\nmetadata:\n  name: my-new-cron-object\nspec:\n  cronSpec: "* * * * */5"\n  image: my-awesome-cron-image\n'})}),"\n",(0,n.jsxs)(o.p,{children:["A partir de aqu\xed, podemos usar el recurso personalizado como si fuera un recurso nativo de Kubernetes. Por ejemplo, podemos consultar los objetos de un recurso personalizado usando el comando ",(0,n.jsx)(o.code,{children:"kubectl get"}),":"]}),"\n",(0,n.jsx)(o.pre,{children:(0,n.jsx)(o.code,{className:"language-bash",children:"kubectl get crontab --all-namespaces # Listar todos los objetos crontab de todos los namespaces\nkubectl get crontab -n <namespace> # Listar todos los objetos crontab de un namespace\nkubectl get crontab <nombre del objeto> -n <namespace> # Obtener detalles de un objeto crontab\nkubectl describe crontab <nombre del objeto> -n <namespace> # Obtener detalles de un objeto crontab\n"})})]})}function u(e={}){const{wrapper:o}={...(0,r.M)(),...e.components};return o?(0,n.jsx)(o,{...e,children:(0,n.jsx)(l,{...e})}):l(e)}},4552:(e,o,s)=>{s.d(o,{I:()=>c,M:()=>t});var n=s(11504);const r={},a=n.createContext(r);function t(e){const o=n.useContext(a);return n.useMemo((function(){return"function"==typeof e?e(o):{...o,...e}}),[o,e])}function c(e){let o;return o=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:t(e.components),n.createElement(a.Provider,{value:o},e.children)}}}]);