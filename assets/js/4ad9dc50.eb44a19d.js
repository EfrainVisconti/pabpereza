"use strict";(self.webpackChunkpabpereza=self.webpackChunkpabpereza||[]).push([[5500],{17104:(e,s,a)=>{a.r(s),a.d(s,{assets:()=>t,contentTitle:()=>d,default:()=>u,frontMatter:()=>o,metadata:()=>l,toc:()=>i});var n=a(17624),r=a(4552);const o={},d=void 0,l={id:"notas/Kubernetes/logging",title:"logging",description:"Los logs son una de las herramientas m\xe1s importantes para entender el comportamiento de una aplicaci\xf3n. Esta informaci\xf3n nos permite entender qu\xe9 est\xe1 pasando en el sistema y nos ayuda a depurar errores. En este apartado vamos a ver c\xf3mo consumir los logs de los contenedores que se ejecutan en Kubernetes y como integrarlos con otras herramientas de monitorizaci\xf3n.",source:"@site/docs/notas/Kubernetes/logging.md",sourceDirName:"notas/Kubernetes",slug:"/notas/Kubernetes/logging",permalink:"/docs/notas/Kubernetes/logging",draft:!1,unlisted:!1,editUrl:"https://github.com/pabpereza/pabpereza/tree/main/docs/notas/Kubernetes/logging.md",tags:[],version:"current",frontMatter:{},sidebar:"notas",previous:{title:"jobs",permalink:"/docs/notas/Kubernetes/jobs"},next:{title:"manifest",permalink:"/docs/notas/Kubernetes/manifest"}},t={},i=[{value:"Localizaci\xf3n de los ficheros logs",id:"localizaci\xf3n-de-los-ficheros-logs",level:2},{value:"Logs de kubernetes - kubectl logs",id:"logs-de-kubernetes---kubectl-logs",level:2},{value:"A\xf1adiendo herramientas de monitorizaci\xf3n y m\xe9tricas",id:"a\xf1adiendo-herramientas-de-monitorizaci\xf3n-y-m\xe9tricas",level:2},{value:"Metric Server - M\xe9tricas (kubectl top)",id:"metric-server---m\xe9tricas-kubectl-top",level:3},{value:"Dashboard",id:"dashboard",level:3}];function c(e){const s={a:"a",code:"code",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",ul:"ul",...(0,r.M)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(s.p,{children:"Los logs son una de las herramientas m\xe1s importantes para entender el comportamiento de una aplicaci\xf3n. Esta informaci\xf3n nos permite entender qu\xe9 est\xe1 pasando en el sistema y nos ayuda a depurar errores. En este apartado vamos a ver c\xf3mo consumir los logs de los contenedores que se ejecutan en Kubernetes y como integrarlos con otras herramientas de monitorizaci\xf3n."}),"\n",(0,n.jsx)(s.h2,{id:"localizaci\xf3n-de-los-ficheros-logs",children:"Localizaci\xf3n de los ficheros logs"}),"\n",(0,n.jsxs)(s.p,{children:["Para los cluster  de kubernetes basados en ",(0,n.jsx)(s.code,{children:"systemd"})," podemos ver los logs de cada nodo usando el comando ",(0,n.jsx)(s.code,{children:"journalctl"}),":"]}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-bash",children:"journalctl -u kubelet |less\n"})}),"\n",(0,n.jsxs)(s.p,{children:["La mayor\xeda de procesos de docker, actualmente, se ejecutan en contenedores. Para encontrar los ficheros de logs del ",(0,n.jsx)(s.code,{children:"kube-apiserver"})," podemos usar el siguiente comando:"]}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-bash",children:'sudo find / -name "*apiserver*log"\n'})}),"\n",(0,n.jsxs)(s.p,{children:["Luego podemos usar el comando ",(0,n.jsx)(s.code,{children:"less"})," para ver el contenido del fichero:"]}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-bash",children:"sudo less /var/log/containers/kube-apiserver-k8s-master-1_kube-system_kube-apiserver-1.log # Usa las rutas obtenidas en el comando anterior\n"})}),"\n",(0,n.jsx)(s.p,{children:"Otras rutas donde podemos encontrar logs en funci\xf3n del tipo de nodo son:"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-bash",children:"/var/log/kube-apiserver.log # Api server\n/var/log/kube-scheduler.log # Scheduler\n/var/log/kube-controller-manager.log # Controller manager\n/var/log/containers # Logs de los contenedores\n/var/log/pods/ # Logs de los pods\n/var/log/kubelet.log # Logs del kubelet\n/var/log/kube-proxy.log # Logs del kube-proxy\n"})}),"\n",(0,n.jsx)(s.p,{children:"Documentaci\xf3n oficial de kubernetes:"}),"\n",(0,n.jsxs)(s.ul,{children:["\n",(0,n.jsx)(s.li,{children:(0,n.jsx)(s.a,{href:"https://kubernetes.io/docs/tasks/debug/debug-application/debug-service/",children:"Depurar servicios"})}),"\n",(0,n.jsx)(s.li,{children:(0,n.jsx)(s.a,{href:"https://kubernetes.io/docs/tasks/debug/debug-application/determine-reason-pod-failure/",children:"Entender errores de un pod"})}),"\n"]}),"\n",(0,n.jsx)(s.h2,{id:"logs-de-kubernetes---kubectl-logs",children:"Logs de kubernetes - kubectl logs"}),"\n",(0,n.jsxs)(s.p,{children:["Podemos acceder a los logs de un pod usando el comando ",(0,n.jsx)(s.code,{children:"kubectl logs"}),":"]}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-bash",children:"kubectl -n <namespace> logs <pod> #El comando namespace es opcional, si no se especifica se usa el namespace por defecto\n"})}),"\n",(0,n.jsx)(s.h2,{id:"a\xf1adiendo-herramientas-de-monitorizaci\xf3n-y-m\xe9tricas",children:"A\xf1adiendo herramientas de monitorizaci\xf3n y m\xe9tricas"}),"\n",(0,n.jsx)(s.h3,{id:"metric-server---m\xe9tricas-kubectl-top",children:"Metric Server - M\xe9tricas (kubectl top)"}),"\n",(0,n.jsx)(s.p,{children:'En este apartado vamos a ver c\xf3mo a\xf1adir herramientas de monitorizaci\xf3n y m\xe9tricas a nuestro cluster de kubernetes. Lo primero ser\xe1 instalar "metrics-server" en nuestro cluster. Para ello vamos a usar el siguiente comando:'}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-bash",children:"kubectl apply -f https://github.com/kubernetes-sigs/metrics-server/releases/latest/download/components.yaml\n"})}),"\n",(0,n.jsxs)(s.p,{children:["Para entornos de prueba o desarrollo, podemos permitir TLS inseguro. Su certificado es x509 auto firmado y no ser\xe1 v\xe1lido. Podemos utilizar la flag ",(0,n.jsx)(s.code,{children:"--kubelet-insecure-tls"})," para permitir TLS inseguro. NO RECOMENDADO PARA ENTORNOS DE PRODUCCI\xd3N."]}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-bash",children:"kubectl -n kube-system edit deployment metrics-server\n"})}),"\n",(0,n.jsxs)(s.p,{children:["A\xf1adimos la siguiente l\xednea en la secci\xf3n ",(0,n.jsx)(s.code,{children:"containers"}),":"]}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-yaml",children:".....\nspec:\n  containers:\n  - args:\n\t- --cert-dir=/tmp\n\t- --secure-port=4443\n\t- --kubelet-insecure-tls # A\xf1adimos esta l\xednea\n\t- --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname\n\t- --kubelet-use-node-status-port\n\timage: k8s.gcr.io/metrics-server/metrics-server:v0.3.6\n"})}),"\n",(0,n.jsxs)(s.p,{children:["A partir de aqu\xed, ya podr\xedmos consultar las m\xe9tricas de nuestros pods usando el comando ",(0,n.jsx)(s.code,{children:"kubectl top"}),":"]}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-bash",children:"kubectl top pod --all-namespaces # Muestra las m\xe9tricas de todos los pods\nkubectl top pod -n <namespace> # Muestra las m\xe9tricas de los pods de un namespace\nkubectl top node # Muestra las m\xe9tricas de los nodos\n"})}),"\n",(0,n.jsx)(s.h3,{id:"dashboard",children:"Dashboard"}),"\n",(0,n.jsxs)(s.p,{children:["Para instalar el dashboard de kubernetes, podemos usar el siguiente comando (Si no tienes instalado helm te recomiendo que ",(0,n.jsx)(s.a,{href:"https://helm.sh/docs/intro/install/",children:"visites su web para instalarlo"}),"):"]}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-bash",children:"helm repo add k8s-dashboard https://kubernetes.github.io/dashboard # A\xf1adimos el repositorio a helm\nhelm install <nombre que le quieras dar al despliegue> k8s-dashboard/kubernetes-dashboard \n"})}),"\n",(0,n.jsx)(s.p,{children:"La salida de helm nos dar\xe1 las instrucci\xf3n para acceder al dashboard. Ejecuta los comandos indicados, deber\xedan ser similares a los siguientes:"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-yaml",children:'NAME: kube-dashboard\nLAST DEPLOYED: Sat Oct 22 16:04:19 2022\nNAMESPACE: default\nSTATUS: deployed\nREVISION: 1\nTEST SUITE: None\nNOTES:\n*********************************************************************************\n*** PLEASE BE PATIENT: kubernetes-dashboard may take a few minutes to install ***\n*********************************************************************************\n\nGet the Kubernetes Dashboard URL by running:\n  export POD_NAME=$(kubectl get pods -n default -l "app.kubernetes.io/name=kubernetes-dashboard,app.kubernetes.io/instance=kube-dashboard" -o jsonpath="{.items[0].metadata.name}")\n  echo https://127.0.0.1:8443/\n  kubectl -n default port-forward $POD_NAME 8443:8443\n'})}),"\n",(0,n.jsxs)(s.p,{children:["Si quisi\xe9ramos acceder al dashboard desde fuera del cluster podr\xedamos usar el par\xe1metro ",(0,n.jsx)(s.code,{children:"--address"}),", a\xf1adido al comando anterior, para indicar la direcci\xf3n IP desde la que queremos acceder:"]}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-bash",children:"kubectl -n default port-forward --address 0.0.0.0 $POD_NAME 8443:8443 # As\xed cualuier usuario de la red podr\xe1 acceder al dashboard, ojo si no es lo que queremos\n"})}),"\n",(0,n.jsx)(s.p,{children:"Durante la instalaci\xf3n, se crea un usuario de servicio para acceder al dashboard. Este no tiene privilegios por lo que no podremos realizar ciertas acciones desde el dashboard. Podemos asignarle privilegios de administrador usando el siguiente comando:"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-bash",children:"kubectl create clusterrolebinding dashaccess --clusterrole=cluster-admin --serviceaccount=default:<nombre del usuario>\n"})}),"\n",(0,n.jsx)(s.p,{children:"\xa1OJO! El nombre de usuario depende del nombre que le hayamos dado al despliegue al dashboard. Ante la duda podemos consultar el nombre de nuestro usuario de servicio usando el siguiente comando:"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-bash",children:"kubectl get serviceaccounts \n"})}),"\n",(0,n.jsxs)(s.p,{children:["Nuestro usuario deber\xeda ser algo similar a ",(0,n.jsx)(s.code,{children:"<nombre del despliegue>-kubernetes-dashboard"}),"."]}),"\n",(0,n.jsx)(s.p,{children:"Si accedemos al dashboard, podemos autenticarnos mediante el token de este usuario de servicio ( tambi\xe9n podr\xedamos usar el kubeconfig del administrador del cluster). Para obtener el token, ejecutamos el siguiente comando:"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-bash",children:"kubectl describe secrets dashboard-kubernetes-dashboard-token-<TAB> # TAB para autocompletar el nombre completo del secret\n"})})]})}function u(e={}){const{wrapper:s}={...(0,r.M)(),...e.components};return s?(0,n.jsx)(s,{...e,children:(0,n.jsx)(c,{...e})}):c(e)}},4552:(e,s,a)=>{a.d(s,{I:()=>l,M:()=>d});var n=a(11504);const r={},o=n.createContext(r);function d(e){const s=n.useContext(o);return n.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function l(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:d(e.components),n.createElement(o.Provider,{value:s},e.children)}}}]);