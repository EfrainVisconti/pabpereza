"use strict";(self.webpackChunkpabpereza=self.webpackChunkpabpereza||[]).push([[4088],{52960:(e,n,o)=>{o.r(n),o.d(n,{assets:()=>c,contentTitle:()=>t,default:()=>u,frontMatter:()=>s,metadata:()=>d,toc:()=>i});var a=o(17624),r=o(4552);const s={},t=void 0,d={id:"notas/en_navegador",title:"en_navegador",description:"Hoy en d\xeda cualquier aplicaci\xf3n la podemos ejecutar en nuestro navegador web. Pero, \xbfpor qu\xe9 tener aplicaciones sueltas si podemos usarlo para acceder a nuestro sistema operativo completo?. Es verdad que existen soluciones como Microsoft 365, Horizon y dem\xe1s, las cuales est\xe1n enfocadas principalmente en entornos corporativos windows y la mayor\xeda requieren de clientes espec\xedficos para poder usarlos.",source:"@site/docs/notas/en_navegador.md",sourceDirName:"notas",slug:"/notas/en_navegador",permalink:"/docs/notas/en_navegador",draft:!1,unlisted:!1,editUrl:"https://github.com/pabpereza/pabpereza/tree/main/docs/notas/en_navegador.md",tags:[],version:"current",frontMatter:{},sidebar:"notas",previous:{title:"desactivar_swap",permalink:"/docs/notas/desactivar_swap"},next:{title:"fundamentos",permalink:"/docs/notas/fundamentos"}},c={},i=[{value:"Forma f\xe1cil y autom\xe1tica (Recomendada para todos)",id:"forma-f\xe1cil-y-autom\xe1tica-recomendada-para-todos",level:2}];function l(e){const n={a:"a",code:"code",em:"em",h2:"h2",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,r.M)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(n.p,{children:"Hoy en d\xeda cualquier aplicaci\xf3n la podemos ejecutar en nuestro navegador web. Pero, \xbfpor qu\xe9 tener aplicaciones sueltas si podemos usarlo para acceder a nuestro sistema operativo completo?. Es verdad que existen soluciones como Microsoft 365, Horizon y dem\xe1s, las cuales est\xe1n enfocadas principalmente en entornos corporativos windows y la mayor\xeda requieren de clientes espec\xedficos para poder usarlos."}),"\n",(0,a.jsx)(n.p,{children:"El objetivo de esta gu\xeda es explicar como ejecutar una distribuci\xf3n linux en tu navegador. Bueno, siendo sinceros, esto tiene un poco de truco. Efectivamente vamos a conseguir tener acceso a una distribuci\xf3n linux en el navegador, pero realmente no lo esta ejecutando el mismo."}),"\n",(0,a.jsx)(n.p,{children:"Normalmente este tipo de sistemas funcionan en linux gracias a un proyecto llamado Apache Guacamole. Esta es una herramienta de conexi\xf3n remota que permite hacer de cliente para conectarse a un sistema a trav\xe9s de RDP o VNC."}),"\n",(0,a.jsx)(n.p,{children:"Este es el esquema de lo que vamos a hacer:"}),"\n",(0,a.jsx)(n.p,{children:"![[guacamole_linux.drawio.svg]]"}),"\n",(0,a.jsx)(n.p,{children:"El objetivo es que nuestro contenedor lance un servicio de VNC o RDP que no est\xe9 expuesto y por otra parte un servidor de Apache Guacamole que exponha un servidor web al que podemos conectarnos con el navegador web. Desde esta p\xe1gina podremos gestionar entornos remotos y por debajo otro servicio hace de cliente contra estos entornos remotos."}),"\n",(0,a.jsx)(n.p,{children:"Veremos dos formas de conseguirlo, la primera totalmente autom\xe1tica y la segunda haremos de forma manual para desglosar los pasos."}),"\n",(0,a.jsx)(n.h2,{id:"forma-f\xe1cil-y-autom\xe1tica-recomendada-para-todos",children:"Forma f\xe1cil y autom\xe1tica (Recomendada para todos)"}),"\n",(0,a.jsxs)(n.p,{children:["De la mano de las im\xe1genes de docker de ",(0,a.jsx)(n.a,{href:"https://linuxserver.io",children:"linuxserver.io"})," podemos ejecutar contenedores de linux con todo lo hablado anteriormente, en diferentes distribuciones y con diferentes gestores de ventanas."]}),"\n",(0,a.jsx)(n.p,{children:"Ofrecen las principales distribuciones de linux, como ubuntu, alpine, fedora, arch en combinaci\xf3n con los gestores de ventanas m\xe1s populares XFCE, KDE, i3, Openbox, IceWM... etc."}),"\n",(0,a.jsxs)(n.p,{children:["Pod\xe9is consultar el listado completo en ",(0,a.jsx)(n.a,{href:"https://hub.docker.com/r/linuxserver/webtop/",children:"linuxserver.io"}),". Este es un breve resumen del tag que tendr\xedas que usar en la imagen de tu contenedor en funci\xf3n del sabor que prefieras:"]}),"\n",(0,a.jsxs)(n.table,{children:[(0,a.jsx)(n.thead,{children:(0,a.jsxs)(n.tr,{children:[(0,a.jsx)(n.th,{children:"Tag"}),(0,a.jsx)(n.th,{children:"Description"})]})}),(0,a.jsxs)(n.tbody,{children:[(0,a.jsxs)(n.tr,{children:[(0,a.jsx)(n.td,{children:"latest"}),(0,a.jsx)(n.td,{children:"XFCE Alpine"})]}),(0,a.jsxs)(n.tr,{children:[(0,a.jsx)(n.td,{children:"ubuntu-xfce"}),(0,a.jsx)(n.td,{children:"XFCE Ubuntu"})]}),(0,a.jsxs)(n.tr,{children:[(0,a.jsx)(n.td,{children:"fedora-xfce"}),(0,a.jsx)(n.td,{children:"XFCE Fedora"})]}),(0,a.jsxs)(n.tr,{children:[(0,a.jsx)(n.td,{children:"arch-xfce"}),(0,a.jsx)(n.td,{children:"XFCE Arch"})]}),(0,a.jsxs)(n.tr,{children:[(0,a.jsx)(n.td,{children:"alpine-kde"}),(0,a.jsx)(n.td,{children:"KDE Alpine"})]}),(0,a.jsxs)(n.tr,{children:[(0,a.jsx)(n.td,{children:"ubuntu-kde"}),(0,a.jsx)(n.td,{children:"KDE Ubuntu"})]}),(0,a.jsxs)(n.tr,{children:[(0,a.jsx)(n.td,{children:"fedora-kde"}),(0,a.jsx)(n.td,{children:"KDE Fedora"})]}),(0,a.jsxs)(n.tr,{children:[(0,a.jsx)(n.td,{children:"arch-kde"}),(0,a.jsx)(n.td,{children:"KDE Arch"})]})]})]}),"\n",(0,a.jsx)(n.p,{children:"Para ejecutar un contenedor de esta forma, simplemente ejecutamos el comando con la configuraci\xf3n de los diferentes par\xe1metros. Importante entender los par\xe1metros opciones, concretamente, el montaje del socket. Este nos permitir\xe1 usar docker dentro del contenedor pero pondr\xe1 en riesgo la seguridad de nuestro entorno en caso de ser vulnerado."}),"\n",(0,a.jsx)(n.p,{children:"Sobre la seguridad en contenedores hablo m\xe1s extendidamente en esta video entrada [[Contenedores]]."}),"\n",(0,a.jsxs)(n.p,{children:["Comando de ejemplo (en la secci\xf3n de ",(0,a.jsx)(n.em,{children:"Parameters"})," de DockerHub se explica cada uno de ellos):"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-shell",children:'docker run -d \\\n  --name=webtop \\\n  --security-opt seccomp=unconfined `#optional` \\\n  -e PUID=1000 \\\n  -e PGID=1000 \\\n  -e TZ=Europe/London \\\n  -e SUBFOLDER=/ `#optional` \\\n  -e KEYBOARD=en-us-qwerty `#optional` \\\n  -p 3000:3000 \\\n  -v /path/to/data:/config \\\n  -v /var/run/docker.sock:/var/run/docker.sock `#optional` \\\n  --device /dev/dri:/dev/dri `#optional` \\\n  --shm-size="1gb" `#optional` \\\n  --restart unless-stopped \\\n  lscr.io/linuxserver/webtop\n'})}),"\n",(0,a.jsx)(n.p,{children:"Personalmente, si no necesitas usar docker dentro de este contenedor ni montar ning\xfan archivo lo ejecutar\xeda as\xed (para potenciar su seguridad, poner el teclado en espa\xf1ol y la hora local):"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-shell",children:'docker run -d \\\n  --name=pabpereza.dev \\\n  --security-opt seccomp=unconfined `# Activar solo si no te funciona correctamente` \\\n  -e PUID=1000 \\\n  -e PGID=1000 \\\n  -e TZ=Europe/Madrid `# Hora local` \\\n  -e KEYBOARD=es-es-qwerty `# Teclado en castellano` \\\n  -e AUTO_LOGIN=true `# Poner a false para quitar el autologin (recuerda cambiar la pass)` \\\n  -p 3000:3000 \\\n  -v /var/run/docker.sock:/var/run/docker.sock `#Borrar si no queremos usar docker dentro del contenedor` \\\n  --shm-size="1gb" `#Previene a los navegadores modernos fallar por l\xedmites de memoria` \\\n  --restart unless-stopped \\\n  lscr.io/linuxserver/webtop `# Despues de webtop con : podr\xedamos a\xf1adir el tag para usar la distribuci\xf3n que queramos por defecto Alpine con XFCE`\n'})}),"\n",(0,a.jsxs)(n.p,{children:["Ya lo tendr\xedamos funcionando. Tambi\xe9n podemos mejorar el rendimiento siguiendo la gu\xeda de ",(0,a.jsx)(n.em,{children:"Hardware acceleration"})," (en la p\xe1gina de ",(0,a.jsx)(n.a,{href:"https://hub.docker.com/r/linuxserver/webtop/",children:"DockerHub"}),") aunque solo funciona en el contenedor de ubuntu."]}),"\n",(0,a.jsxs)(n.p,{children:["M\xe1s que aconsejable cambiar la contrase\xf1a al usuario del contenedor para que nadie pueda acceder a \xe9l directamente o poner un proxy previo con autenticaci\xf3n de alg\xfan tipo. Adem\xe1s, puedes desactivar el ",(0,a.jsx)(n.code,{children:"autologin"})," (Variable de entorno AUTO_LOGIN en el comando de docker run)."]}),"\n",(0,a.jsx)(n.p,{children:"Esto lo podemos hacer con el comando (en un terminal dentro del contenedor):"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-shell",children:"sudo passwd <usuario>\n"})}),"\n",(0,a.jsxs)(n.p,{children:["Seguidamente se nos pedir\xe1 la nueva contrase\xf1a para el usuario (si os pide la anterior por defecto es ",(0,a.jsx)(n.em,{children:"abc"})," como el usuario). Las pr\xf3ximas veces que entr\xe9is al contenedor a trav\xe9s del navegador os pedir\xe1 la contrase\xf1a para conectarse."]})]})}function u(e={}){const{wrapper:n}={...(0,r.M)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(l,{...e})}):l(e)}},4552:(e,n,o)=>{o.d(n,{I:()=>d,M:()=>t});var a=o(11504);const r={},s=a.createContext(r);function t(e){const n=a.useContext(s);return a.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function d(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:t(e.components),a.createElement(s.Provider,{value:n},e.children)}}}]);