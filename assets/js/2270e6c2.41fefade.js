"use strict";(self.webpackChunkpabpereza=self.webpackChunkpabpereza||[]).push([[6838],{67256:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>i,contentTitle:()=>t,default:()=>u,frontMatter:()=>r,metadata:()=>l,toc:()=>c});var a=s(17624),o=s(4552);const r={},t=void 0,l={id:"notas/Kubernetes/instalacion",title:"instalacion",description:"La instalaci\xf3n de Kubernetes en un cluster de nodos puede ser un proceso complejo. En esta gu\xeda agrupar\xe9 distintos tutoriales de instalaci\xf3n con distintos motores de contenedores y distintos sistemas operativos.",source:"@site/docs/notas/Kubernetes/instalacion.md",sourceDirName:"notas/Kubernetes",slug:"/notas/Kubernetes/instalacion",permalink:"/docs/notas/Kubernetes/instalacion",draft:!1,unlisted:!1,editUrl:"https://github.com/pabpereza/pabpereza/tree/main/docs/notas/Kubernetes/instalacion.md",tags:[],version:"current",frontMatter:{},sidebar:"notas",previous:{title:"ingress_controller",permalink:"/docs/notas/Kubernetes/ingress_controller"},next:{title:"jobs",permalink:"/docs/notas/Kubernetes/jobs"}},i={},c=[{value:"Ubuntu Server 22.04 con Containerd",id:"ubuntu-server-2204-con-containerd",level:2},{value:"Nodo maestro",id:"nodo-maestro",level:3},{value:"Nodo worker",id:"nodo-worker",level:3}];function d(e){const n={code:"code",h2:"h2",h3:"h3",li:"li",ol:"ol",p:"p",pre:"pre",...(0,o.M)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(n.p,{children:"La instalaci\xf3n de Kubernetes en un cluster de nodos puede ser un proceso complejo. En esta gu\xeda agrupar\xe9 distintos tutoriales de instalaci\xf3n con distintos motores de contenedores y distintos sistemas operativos."}),"\n",(0,a.jsx)(n.h2,{id:"ubuntu-server-2204-con-containerd",children:"Ubuntu Server 22.04 con Containerd"}),"\n",(0,a.jsx)(n.h3,{id:"nodo-maestro",children:"Nodo maestro"}),"\n",(0,a.jsxs)(n.ol,{children:["\n",(0,a.jsx)(n.li,{children:"Instalar requisitos previos:"}),"\n"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"apt install curl apt-transport-https vim git wget gnupg2 \\\nsoftware-properties-common apt-transport-https ca-certificates uidmap -y\n"})}),"\n",(0,a.jsxs)(n.ol,{start:"2",children:["\n",(0,a.jsx)(n.li,{children:"Desactivar swap:"}),"\n"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"swapoff -a\nsed -i '/swap/s/^\\(.*\\)$/#\\1/g' /etc/fstab # Auto comenta la l\xednea de swap en fstab\n"})}),"\n",(0,a.jsxs)(n.ol,{start:"3",children:["\n",(0,a.jsx)(n.li,{children:"Cargar m\xf3dulos necesarios:"}),"\n"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"modprobe overlay\nmodprobe br_netfilter\n\nsudo tee /etc/modules-load.d/k8s.conf <<EOF\noverlay\nbr_netfilter\nEOF\n"})}),"\n",(0,a.jsxs)(n.ol,{start:"4",children:["\n",(0,a.jsx)(n.li,{children:"Configurar m\xf3dulos:"}),"\n"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"cat << EOF | tee /etc/sysctl.d/kubernetes.conf\nnet.bridge.bridge-nf-call-ip6tables = 1\nnet.bridge.bridge-nf-call-iptables = 1\nnet.ipv4.ip_forward = 1\nEOF\n\nsysctl --system # Aplica la configuraci\xf3n\n"})}),"\n",(0,a.jsxs)(n.ol,{start:"5",children:["\n",(0,a.jsx)(n.li,{children:"A\xf1adir al fichero `/etc/hosts' la IP y el nombre de la m\xe1quina (ATENCI\xd3N: Pon la IP del nodo master si esta configurando un worker). Con esto podremos configurar el cluster con el nombre de la m\xe1quina en vez de la IP."}),"\n"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:'echo "<IP> <NOMBRE>" >> /etc/hosts\n'})}),"\n",(0,a.jsxs)(n.ol,{start:"6",children:["\n",(0,a.jsx)(n.li,{children:"Instalar containerd:"}),"\n"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:'curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -\nadd-apt-repository "deb [arch=amd64] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable"\n\napt update && apt install containerd.io -y\n'})}),"\n",(0,a.jsxs)(n.ol,{start:"7",children:["\n",(0,a.jsx)(n.li,{children:"Configurar containerd:"}),"\n"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"mkdir -p /etc/containerd\ncontainerd config default | sudo tee /etc/containerd/config.toml\n"})}),"\n",(0,a.jsxs)(n.p,{children:["Dentro del fichero ",(0,a.jsx)(n.code,{children:"/etc/containerd/config.toml"})," hay que cambiar la l\xednea ",(0,a.jsx)(n.code,{children:"SystemdCgroup = false"})," por ",(0,a.jsx)(n.code,{children:"SystemdCgroup = true"}),"."]}),"\n",(0,a.jsxs)(n.ol,{children:["\n",(0,a.jsx)(n.li,{children:"Iniciar containerd:"}),"\n"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"systemctl enable containerd\nsystemctl restart containerd\n"})}),"\n",(0,a.jsxs)(n.ol,{start:"9",children:["\n",(0,a.jsx)(n.li,{children:"Instalar kubeadm, kubelet y kubectl:"}),"\n"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:'# Agrergar repositorio de Kubernetes\necho "deb https://apt.kubernetes.io/ kubernetes-xenial main" | tee -a /etc/apt/sources.list.d/kubernetes.list\n\n# Instalar clave p\xfablica de Kubernetes\ncurl -s https://packages.cloud.google.com/apt/doc/apt-key.gpg | apt-key add \n\n# Instalar paquetes\napt update && apt install -y kubelet kubeadm kubectl\n# Especificar versi\xf3n de Kubernetes, por ejemplo:\n#apt install -y kubelet=1.24.1-00 kubeadm=1.24.1-00 kubectl=1.24.1-00\n\n# Bloquear actualizaciones autom\xe1ticas\napt-mark hold kubelet kubeadm kubectl\n\n# Iniciar kubelet\nsystemctl enable kubelet\n'})}),"\n",(0,a.jsxs)(n.ol,{start:"10",children:["\n",(0,a.jsx)(n.li,{children:"Iniciar cluster master:"}),"\n"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"kubeadm init --pod-network-cidr=<rango de IPs para pods> --control-plane-endpoint=<Nombre a\xf1a\xf1adido en /etc/hosts>:6443\n"})}),"\n",(0,a.jsxs)(n.ol,{start:"10",children:["\n",(0,a.jsx)(n.li,{children:"Configurar kubectl:"}),"\n"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"mkdir -p $HOME/.kube\ncp -i /etc/kubernetes/admin.conf $HOME/.kube/config\nchown $(id -u):$(id -g) $HOME/.kube/config\n"})}),"\n",(0,a.jsxs)(n.ol,{start:"11",children:["\n",(0,a.jsx)(n.li,{children:"Instalar red de pods:\nEsta paso es importante, tendremos que editar el archivo de configuraci\xf3n de la red de pods para que funcione correctamente. En este caso usaremos Calico, pero puedes usar cualquier otra red de pods que quieras. Debemos especificar en la instrucci\xf3n CALICO_IPV4POOL_CIDR el rango de IPs que hemos especificado en el paso 9."}),"\n"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:'wget https://docs.projectcalico.org/manifests/calico.yaml\n\n# Editar el archivo de configuraci\xf3n de Calico descomentando las l\xedneas. Quedando as\xed:\n- name: CALICO_IPV4POOL_CIDR\n  value: "rango de IPs para pods"\n'})}),"\n",(0,a.jsx)(n.p,{children:"Por ejemplo:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:'            # The default IPv4 pool to create on startup if none exists. Pod IPs will be\n            # chosen from this range. Changing this value after installation will have\n            # no effect. This should fall within `--cluster-cidr`.\n            - name: CALICO_IPV4POOL_CIDR\n              value: "192.168.0.0/16"\n           # The default IPv4 pool to create on startup if none exists. Pod IPs will be\n            # chosen from this range. Changing this value after installation will have\n            # no effect. This should fall within `--cluster-cidr`.\n'})}),"\n",(0,a.jsxs)(n.ol,{start:"12",children:["\n",(0,a.jsx)(n.li,{children:"Aplicar red de pods:"}),"\n"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"kubectl apply -f calico.yaml\n"})}),"\n",(0,a.jsx)(n.h3,{id:"nodo-worker",children:"Nodo worker"}),"\n",(0,a.jsxs)(n.p,{children:["Repeticiones de los pasos 1 a 9 del nodo maestro. Esta vez en el fichero ",(0,a.jsx)(n.code,{children:"/etc/hosts"})," tenemos que a\xf1adir la IP y el nombre del nodo maestro."]}),"\n",(0,a.jsxs)(n.ol,{children:["\n",(0,a.jsx)(n.li,{children:"Iniciar cluster worker:"}),"\n"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"kubeadm join <Nombre del nodo maestro>:6443 --token <token> --discovery-token-ca-cert-hash sha256:<hash>\n"})}),"\n",(0,a.jsxs)(n.p,{children:["El token se puede obtener con el comando ",(0,a.jsx)(n.code,{children:"kubeadm token list"})," lanzado en el nodo maestro. Si hubiera expirado, se puede generar uno nuevo con ",(0,a.jsx)(n.code,{children:"kubeadm token create"}),"."]}),"\n",(0,a.jsx)(n.p,{children:"El hash se puede obtener con el siguiente comando de openssl. Lo lanzamos en el nodo maestro:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"openssl x509 -pubkey -in /etc/kubernetes/pki/ca.crt | openssl rsa -pubin -outform der 2>/dev/null | openssl dgst -sha256 -hex | sed 's/^.* //'\n"})})]})}function u(e={}){const{wrapper:n}={...(0,o.M)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(d,{...e})}):d(e)}},4552:(e,n,s)=>{s.d(n,{I:()=>l,M:()=>t});var a=s(11504);const o={},r=a.createContext(o);function t(e){const n=a.useContext(r);return a.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:t(e.components),a.createElement(r.Provider,{value:n},e.children)}}}]);