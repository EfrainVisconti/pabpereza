"use strict";(self.webpackChunkpabpereza=self.webpackChunkpabpereza||[]).push([[2970],{91140:(e,n,a)=>{a.r(n),a.d(n,{assets:()=>d,contentTitle:()=>o,default:()=>h,frontMatter:()=>c,metadata:()=>l,toc:()=>i});var r=a(17624),s=a(4552);const c={},o=void 0,l={id:"notas/Docker/comandos_generales",title:"comandos_generales",description:"Introducir usuario en el grupo docker",source:"@site/docs/notas/Docker/comandos_generales.md",sourceDirName:"notas/Docker",slug:"/notas/Docker/comandos_generales",permalink:"/docs/notas/Docker/comandos_generales",draft:!1,unlisted:!1,editUrl:"https://github.com/pabpereza/pabpereza/tree/main/docs/notas/Docker/comandos_generales.md",tags:[],version:"current",frontMatter:{},sidebar:"notas",previous:{title:"Save y Load",permalink:"/docs/notas/Docker/Save y load"},next:{title:"Hashcat",permalink:"/docs/notas/Hashcat"}},d={},i=[];function t(e){const n={code:"code",p:"p",pre:"pre",...(0,s.M)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.p,{children:"Introducir usuario en el grupo docker"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-shell",children:"sudo usermod -a -G docker [nombre_usuario]\n"})}),"\n",(0,r.jsx)(n.p,{children:"\xa0\nRefrescar grupo sin tener que reiniciar"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-shell",children:"newgrp docker\n"})}),"\n",(0,r.jsx)(n.p,{children:"\xa0\nBuscar un contenedor para descargar"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-shell",children:"docker search [nombre_contenedor]\n"})}),"\n",(0,r.jsx)(n.p,{children:"\xa0\nInstalar una imagen"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-shell",children:"docker pull [nombre_imagen]\n"})}),"\n",(0,r.jsx)(n.p,{children:"\xa0\nListar im\xe1genes instaladas"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-shell",children:"docker images\n"})}),"\n",(0,r.jsx)(n.p,{children:"Ver im\xe1genes ejecut\xe1ndose"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-shell",children:"docker ps\n"})}),"\n",(0,r.jsx)(n.p,{children:"\xa0\nIniciar una imagen"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-shell",children:"docker run [nombre_imagen]\n"})}),"\n",(0,r.jsx)(n.p,{children:"\xa0\nPara acceder al contenedor, adem\xe1s de crearlo, se puede hacer de dos maneras. Una es haciendo referencia al IMAGE ID y otra al repositorio (REPOSITORY) y la etiqueta (TAG)."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-shell",children:"docker run -i -t b72889fa879c /bin/bash\n"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-shell",children:"docker run -i -t ubuntu:14.04 /bin/bash\n"})}),"\n",(0,r.jsx)(n.p,{children:"\xa0\nEl usuario tambi\xe9n puede ponerle una etiqueta personalizada que haga referencia a una imagen instalada en su sistema."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-shell",children:"docker tag b72889fa879c oldlts:latest\n"})}),"\n",(0,r.jsx)(n.p,{children:"\xa0\nPara crear el contenedor y ponerlo en marcha hay que seguir el mismo paso de antes, pero cambiando la referencia por la etiqueta creada por el usuario."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-shell",children:"docker run -i -t oldlts:latest /bin/bash\n"})}),"\n",(0,r.jsx)(n.p,{children:"\xa0\nPara iniciar un contenedor en modo demonio"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-shell",children:"docker run -d [identificador_imagen]\n"})}),"\n",(0,r.jsx)(n.p,{children:"\xa0\n\xa0\nComo ya hemos comentado, cada vez que ejecutamos el comando run estamos creando un contenedor nuevo, por lo que lo recomendable es ejecutarlo tan solo una vez. Luego podemos listar los contenedores disponibles a trav\xe9s del siguiente comando."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-shell",children:"docker ps -a\n"})}),"\n",(0,r.jsx)(n.p,{children:"\xa0\nHay dos maneras de poner en marcha el contenedor a trav\xe9s del mismo comando, pudi\xe9ndose utilizar su identificador (CONTAINER ID) o su nombre (NAMES)."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-shell",children:"docker start ef7e107e0aae\n"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-shell",children:"docker start lonely_wing\n"})}),"\n",(0,r.jsx)(n.p,{children:"\xa0\nSi se quiere acceder  (attach, que se podr\xeda traducir por adjuntar o unir) al contenedor se puede recurrir a una de estas dos opciones."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-shell",children:"docker attach ef7e107e0aae\n"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-shell",children:"docker attach lonely_wing\n"})}),"\n",(0,r.jsx)(n.p,{children:"Salir del terminal de docker sin apagarlo\nControl + P  & Control + Q\xa0"}),"\n",(0,r.jsx)(n.p,{children:"Para detener un contenedor"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-shell",children:"docker stop ef7e107e0aae\n"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-shell",children:"docker stop lonely_wing\n"})}),"\n",(0,r.jsx)(n.p,{children:"\xa0\nPara borrar un contenedor"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-shell",children:"docker rm ef7e107e0aae\n"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-shell",children:"docker rm lonely_wing\n"})}),"\n",(0,r.jsx)(n.p,{children:"Parar todos los contenedores"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-shell",children:"docker stop $(docker ps -a -q)\n"})}),"\n",(0,r.jsx)(n.p,{children:"Terminal de un contenedor arrancado"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-shell",children:"docker exec -ti f38197856de0 /bin/bash\n"})}),"\n",(0,r.jsx)(n.p,{children:"\xa0\nEliminar todos los contenedores"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-shell",children:"docker rm $(docker ps -a -q)\n"})}),"\n",(0,r.jsx)(n.p,{children:"\xa0\nEliminar todas las im\xe1genes"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-shell",children:"docker rmi $(docker images -q)\n"})}),"\n",(0,r.jsx)(n.p,{children:"\xa0\nRealizar commit de una imagen"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-shell",children:'docker commit -a "[informaci\xf3n creador]" -m "[versi\xf3n del programa]" [identificador_container] [nombre_repositorio:nombre_TAG]\n'})}),"\n",(0,r.jsx)(n.p,{children:"\xa0\nObtener la ruta del registro de un contenedor"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-shell",children:"docker inspect --format='{{.LogPath}}' $ID_CONTENEDOR\n"})})]})}function h(e={}){const{wrapper:n}={...(0,s.M)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(t,{...e})}):t(e)}},4552:(e,n,a)=>{a.d(n,{I:()=>l,M:()=>o});var r=a(11504);const s={},c=r.createContext(s);function o(e){const n=r.useContext(c);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:o(e.components),r.createElement(c.Provider,{value:n},e.children)}}}]);