"use strict";(self.webpackChunkpabpereza=self.webpackChunkpabpereza||[]).push([[1108],{53500:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>l,contentTitle:()=>i,default:()=>p,frontMatter:()=>r,metadata:()=>c,toc:()=>t});var a=s(17624),o=s(4552);const r={},i=void 0,c={id:"notas/nmap",title:"nmap",description:"En la parte de osint o fingerprinting, se busca obtener informaci\xf3n de los objetivos, para ello se utilizan herramientas como nmap, que nos permite obtener informaci\xf3n de los puertos abiertos, servicios, versiones, etc.",source:"@site/docs/notas/nmap.md",sourceDirName:"notas",slug:"/notas/nmap",permalink:"/docs/notas/nmap",draft:!1,unlisted:!1,editUrl:"https://github.com/pabpereza/pabpereza/tree/main/docs/notas/nmap.md",tags:[],version:"current",frontMatter:{},sidebar:"notas",previous:{title:"nfs",permalink:"/docs/notas/nfs"},next:{title:"oh_my_posh",permalink:"/docs/notas/oh_my_posh"}},l={},t=[{value:"Instalaci\xf3n",id:"instalaci\xf3n",level:2},{value:"Descubrimiento de hosts",id:"descubrimiento-de-hosts",level:2},{value:"Tipos de escaneos",id:"tipos-de-escaneos",level:2},{value:"Syn Scan (Escaneo TCP SYN)",id:"syn-scan-escaneo-tcp-syn",level:3},{value:"Connect Scan (Escaneo TCP Connect)",id:"connect-scan-escaneo-tcp-connect",level:3},{value:"Ack Scan (Escaneo TCP ACK)",id:"ack-scan-escaneo-tcp-ack",level:3},{value:"Window Scan (Escaneo TCP Window)",id:"window-scan-escaneo-tcp-window",level:3},{value:"Null Scan (Escaneo TCP Null)",id:"null-scan-escaneo-tcp-null",level:3},{value:"Fin Scan (Escaneo TCP Fin)",id:"fin-scan-escaneo-tcp-fin",level:3},{value:"Xmas Scan (Escaneo TCP Xmas)",id:"xmas-scan-escaneo-tcp-xmas",level:3},{value:"Idle Scan (Escaneo TCP Idle)",id:"idle-scan-escaneo-tcp-idle",level:3},{value:"UDP Scan (Escaneo UDP)",id:"udp-scan-escaneo-udp",level:3},{value:"Escaneo de puertos",id:"escaneo-de-puertos",level:2},{value:"Filtrado de puertos",id:"filtrado-de-puertos",level:3},{value:"Banner Grabbing o obtenci\xf3n de banners",id:"banner-grabbing-o-obtenci\xf3n-de-banners",level:3},{value:"Escaneo de puertos con scripts",id:"escaneo-de-puertos-con-scripts",level:3},{value:"Combinaciones comunes",id:"combinaciones-comunes",level:2}];function d(e){const n={code:"code",h2:"h2",h3:"h3",p:"p",pre:"pre",...(0,o.M)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(n.p,{children:"En la parte de osint o fingerprinting, se busca obtener informaci\xf3n de los objetivos, para ello se utilizan herramientas como nmap, que nos permite obtener informaci\xf3n de los puertos abiertos, servicios, versiones, etc."}),"\n",(0,a.jsx)(n.p,{children:"La mayor\xeda de sistemas operativos enfocados en pentesting tienen instalado nmap, por lo que no es necesario instalarlo. Por si no estuvieras utilizando kalilinux, parrot, blackarch... etc, podr\xedas instalarlo de la siguiente manera."}),"\n",(0,a.jsx)(n.h2,{id:"instalaci\xf3n",children:"Instalaci\xf3n"}),"\n",(0,a.jsx)(n.p,{children:"En sistemas basados en Debian, podr\xedas instalarlo de la siguiente manera."}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"sudo apt install nmap\n"})}),"\n",(0,a.jsx)(n.p,{children:"En el caso de sistemas basados en Arch, podr\xedas instalarlo de la siguiente manera."}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"sudo pacman -S nmap\n"})}),"\n",(0,a.jsx)(n.p,{children:"Para sistemas con paquetes rpm, podr\xedas instalarlo de la siguiente manera."}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"sudo dnf install nmap\n"})}),"\n",(0,a.jsx)(n.p,{children:"Y por \xfaltimo, para sistemas con paqueter\xeda yum, podr\xedas instalarlo de la siguiente manera."}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"sudo yum install nmap\n"})}),"\n",(0,a.jsx)(n.h2,{id:"descubrimiento-de-hosts",children:"Descubrimiento de hosts"}),"\n",(0,a.jsxs)(n.p,{children:["Los primero que haremos ser\xe1 descubrir los hosts que est\xe1n en la red, para ello utilizaremos el comando ",(0,a.jsx)(n.code,{children:"nmap"}),", con el par\xe1metro ",(0,a.jsx)(n.code,{children:"-sn"}),", que nos permite realizar un escaneo ping, para descubrir los hosts que est\xe1n en la red."]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"nmap -sn <rango de ips>\n"})}),"\n",(0,a.jsx)(n.p,{children:"Los ragos en de IPs en nmap, se pueden definir de la siguiente manera."}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"nmap -sn 192.168.1.0-254 # Rango de IPs espec\xedfico\nnmap -sn 192.168.0-32.0-254 # M\xfaltiples rangos espec\xedficos\nnmap -sn 192.168.1.0/24 # Rango de IPs con m\xe1scara de red\n"})}),"\n",(0,a.jsxs)(n.p,{children:["RECUERDA: Un escaneo ping utiliza el protocolo ICMP, el cual es bloqueado por muchos cortafuegos, por lo que no siempre funcionar\xe1. Como alternativa, podr\xedas utilizar el comando ",(0,a.jsx)(n.code,{children:"arp-scan"}),", que utiliza el protocolo ARP, el cual no es bloqueado por los cortafuegos."]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"arp-scan -l # Escaneo de hosts en la red\n"})}),"\n",(0,a.jsx)(n.h2,{id:"tipos-de-escaneos",children:"Tipos de escaneos"}),"\n",(0,a.jsx)(n.p,{children:"Nmap tiene m\xfaltiples opciones para realizar escaneos de puertos usando diferentes t\xe9cnicas y combinaciones de flags en los paquetes TCP y UDP. En esta secci\xf3n, se explicar\xe1n los escaneos m\xe1s comunes."}),"\n",(0,a.jsx)(n.h3,{id:"syn-scan-escaneo-tcp-syn",children:"Syn Scan (Escaneo TCP SYN)"}),"\n",(0,a.jsx)(n.p,{children:"El escaneo TCP SYN es el m\xe1s com\xfan y el m\xe1s r\xe1pido. Este escaneo env\xeda paquetes TCP SYN a los puertos especificados y espera una respuesta. Si el puerto est\xe1 abierto, el objetivo responde con un paquete TCP SYN/ACK. Si el puerto est\xe1 cerrado, el objetivo responde con un paquete TCP RST. Si el puerto est\xe1 filtrado, el objetivo no responde."}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"nmap -sS <ip>\n"})}),"\n",(0,a.jsx)(n.h3,{id:"connect-scan-escaneo-tcp-connect",children:"Connect Scan (Escaneo TCP Connect)"}),"\n",(0,a.jsx)(n.p,{children:"El escaneo TCP Connect es similar al escaneo TCP SYN, pero en lugar de enviar paquetes TCP SYN, env\xeda paquetes TCP SYN/ACK. Si el puerto est\xe1 abierto, el objetivo responde con un paquete TCP ACK. Si el puerto est\xe1 cerrado, el objetivo responde con un paquete TCP RST. Si el puerto est\xe1 filtrado, el objetivo no responde."}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"nmap -sT <ip>\n"})}),"\n",(0,a.jsx)(n.h3,{id:"ack-scan-escaneo-tcp-ack",children:"Ack Scan (Escaneo TCP ACK)"}),"\n",(0,a.jsx)(n.p,{children:"El escaneo TCP ACK es similar al escaneo TCP SYN, pero en lugar de enviar paquetes TCP SYN, env\xeda paquetes TCP ACK. Si el puerto est\xe1 abierto, el objetivo responde con un paquete TCP RST. Si el puerto est\xe1 cerrado, el objetivo responde con un paquete TCP RST. Si el puerto est\xe1 filtrado, el objetivo no responde."}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"nmap -sA <ip>\n"})}),"\n",(0,a.jsx)(n.h3,{id:"window-scan-escaneo-tcp-window",children:"Window Scan (Escaneo TCP Window)"}),"\n",(0,a.jsx)(n.p,{children:"El escaneo TCP Window es similar al escaneo TCP SYN, pero en lugar de enviar paquetes TCP SYN, env\xeda paquetes TCP SYN/ACK con el flag de ventana en 0. Si el puerto est\xe1 abierto, el objetivo responde con un paquete TCP RST. Si el puerto est\xe1 cerrado, el objetivo responde con un paquete TCP RST. Si el puerto est\xe1 filtrado, el objetivo no responde."}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"nmap -sW <ip>\n"})}),"\n",(0,a.jsx)(n.h3,{id:"null-scan-escaneo-tcp-null",children:"Null Scan (Escaneo TCP Null)"}),"\n",(0,a.jsx)(n.p,{children:"El escaneo TCP Null es similar al escaneo TCP SYN, pero en lugar de enviar paquetes TCP SYN, env\xeda paquetes TCP con todos los flags en 0. Si el puerto est\xe1 abierto, el objetivo responde con un paquete TCP RST. Si el puerto est\xe1 cerrado, el objetivo responde con un paquete TCP RST. Si el puerto est\xe1 filtrado, el objetivo no responde."}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"nmap -sN <ip>\n"})}),"\n",(0,a.jsx)(n.h3,{id:"fin-scan-escaneo-tcp-fin",children:"Fin Scan (Escaneo TCP Fin)"}),"\n",(0,a.jsx)(n.p,{children:"El escaneo TCP Fin es similar al escaneo TCP SYN, pero en lugar de enviar paquetes TCP SYN, env\xeda paquetes TCP FIN. Si el puerto est\xe1 abierto, el objetivo responde con un paquete TCP RST. Si el puerto est\xe1 cerrado, el objetivo responde con un paquete TCP RST. Si el puerto est\xe1 filtrado, el objetivo no responde."}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"nmap -sF <ip>\n"})}),"\n",(0,a.jsx)(n.h3,{id:"xmas-scan-escaneo-tcp-xmas",children:"Xmas Scan (Escaneo TCP Xmas)"}),"\n",(0,a.jsx)(n.p,{children:"El escaneo TCP Xmas es similar al escaneo TCP SYN, pero en lugar de enviar paquetes TCP SYN, env\xeda paquetes TCP con los flags de urgente, push y fin en 1. Si el puerto est\xe1 abierto, el objetivo responde con un paquete TCP RST. Si el puerto est\xe1 cerrado, el objetivo responde con un paquete TCP RST. Si el puerto est\xe1 filtrado, el objetivo no responde."}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"nmap -sX <ip>\n"})}),"\n",(0,a.jsx)(n.h3,{id:"idle-scan-escaneo-tcp-idle",children:"Idle Scan (Escaneo TCP Idle)"}),"\n",(0,a.jsx)(n.p,{children:"El escaneo TCP Idle es similar al escaneo TCP SYN, pero en lugar de enviar paquetes TCP SYN, env\xeda paquetes TCP con el flag de urgente en 1. Si el puerto est\xe1 abierto, el objetivo responde con un paquete TCP RST. Si el puerto est\xe1 cerrado, el objetivo responde con un paquete TCP RST. Si el puerto est\xe1 filtrado, el objetivo no responde."}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"nmap -sI <ip>\n"})}),"\n",(0,a.jsx)(n.h3,{id:"udp-scan-escaneo-udp",children:"UDP Scan (Escaneo UDP)"}),"\n",(0,a.jsx)(n.p,{children:"El escaneo UDP es similar al escaneo TCP SYN, pero en lugar de enviar paquetes TCP SYN, env\xeda paquetes UDP. Si el puerto est\xe1 abierto, el objetivo responde con un paquete UDP. Si el puerto est\xe1 cerrado, el objetivo no responde. Si el puerto est\xe1 filtrado, el objetivo no responde."}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"nmap -sU <ip>\n"})}),"\n",(0,a.jsx)(n.h2,{id:"escaneo-de-puertos",children:"Escaneo de puertos"}),"\n",(0,a.jsx)(n.p,{children:"Nmap tiene m\xfaltiples opciones para realizar escaneos como ya hemos visto. Si no especificamos nada, por defecto, nmap realiza un escaneo de puertos TCP SYN."}),"\n",(0,a.jsx)(n.p,{children:"El escaneo b\xe1sico que podr\xedamos hacer es el siguiente:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"nmap <ip>\n"})}),"\n",(0,a.jsx)(n.p,{children:"Si quisi\xe9ramos realizar un escaneo de puertos UDP, podr\xedamos hacerlo de la siguiente forma:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"nmap -sU <ip>\n"})}),"\n",(0,a.jsx)(n.h3,{id:"filtrado-de-puertos",children:"Filtrado de puertos"}),"\n",(0,a.jsx)(n.p,{children:"Podemos filtrar los puertos que queremos escanear de la siguiente forma:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"nmap -p 1-100 <ip>\n"})}),"\n",(0,a.jsx)(n.p,{children:"Tambi\xe9n podr\xedamos especificar puertos individuales:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"nmap -p 1,2,3,4,5 <ip>\n"})}),"\n",(0,a.jsx)(n.p,{children:"O una combinaci\xf3n de ambos:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"nmap -p 1-100,200,300,400 <ip>\n"})}),"\n",(0,a.jsx)(n.h3,{id:"banner-grabbing-o-obtenci\xf3n-de-banners",children:"Banner Grabbing o obtenci\xf3n de banners"}),"\n",(0,a.jsx)(n.p,{children:"Nmap se conecta a un puerto y obtiene la informaci\xf3n que nos devuelve. Esta informaci\xf3n se conoce como banner. Podemos obtener esta informaci\xf3n de la siguiente forma:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"nmap -sV <ip>\n"})}),"\n",(0,a.jsx)(n.h3,{id:"escaneo-de-puertos-con-scripts",children:"Escaneo de puertos con scripts"}),"\n",(0,a.jsx)(n.p,{children:"Nmap tiene una gran cantidad de scripts que podemos utilizar para realizar escaneos m\xe1s avanzados. Podemos ver la lista de scripts disponibles con el siguiente comando:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"nmap --script-help\n"})}),"\n",(0,a.jsx)(n.p,{children:"Para ejecutar un script en concreto, podemos hacerlo de la siguiente forma:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"nmap --script=<script> <ip>\n"})}),"\n",(0,a.jsx)(n.p,{children:"Algunos scripts tienen argumentos que podemos pasarle. Para ver los argumentos de un script, podemos hacerlo de la siguiente forma:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"nmap --script-help=<script>\n"})}),"\n",(0,a.jsx)(n.p,{children:"Cuando tenemos claro como funciona un script, podemos ejecutarlo de la siguiente forma:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"nmap --script=<script> --script-args=<argumentos> <ip>\n"})}),"\n",(0,a.jsx)(n.p,{children:"Por \xfaltimo, nmap tiene una opci\xf3n para ejecutar autom\xe1ticamente los scripts recomendados a cada puerto autom\xe1ticamente (Es muy lento y poco efectivo si la m\xe1quina tiene muchos puertos abiertos). Podemos hacerlo de la siguiente forma:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"nmap -sC <ip>\n"})}),"\n",(0,a.jsx)(n.h2,{id:"combinaciones-comunes",children:"Combinaciones comunes"}),"\n",(0,a.jsx)(n.p,{children:"Estos ser\xedan algunos ejemplos de escaneos m\xe1s comunes que podr\xedamos realizar:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"nmap -v -p- <ip> # Escaneo de todos los puertos de una m\xe1quina \n"})}),"\n",(0,a.jsx)(n.p,{children:"Cuando sabemos todos los puertos abiertos de una m\xe1quina, podemos realizar un escaneo de servicios para obtener informaci\xf3n m\xe1s detallada de cada uno de ellos. Es importante no volver a escanear todos los puertos y centrarnos solo en los abiertos para ahorrar tiempo y recursos. Podemos hacerlo de la siguiente forma:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"nmap -v -sV -p <puertos abiertos> <ip> # Escaneo de servicios de los puertos abiertos de una m\xe1quina\n"})})]})}function p(e={}){const{wrapper:n}={...(0,o.M)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(d,{...e})}):d(e)}},4552:(e,n,s)=>{s.d(n,{I:()=>c,M:()=>i});var a=s(11504);const o={},r=a.createContext(o);function i(e){const n=a.useContext(r);return a.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:i(e.components),a.createElement(r.Provider,{value:n},e.children)}}}]);