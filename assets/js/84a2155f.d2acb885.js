"use strict";(self.webpackChunkpabpereza=self.webpackChunkpabpereza||[]).push([[3416],{59652:(e,r,o)=>{o.r(r),o.d(r,{assets:()=>i,contentTitle:()=>l,default:()=>d,frontMatter:()=>a,metadata:()=>c,toc:()=>t});var n=o(17624),s=o(4552);const a={},l=void 0,c={id:"notas/MySQL/cursores",title:"cursores",description:"Un cursor es una consulta declarada que provoca que el servidor, cuando se",source:"@site/docs/notas/MySQL/cursores.md",sourceDirName:"notas/MySQL",slug:"/notas/MySQL/cursores",permalink:"/docs/notas/MySQL/cursores",draft:!1,unlisted:!1,editUrl:"https://github.com/pabpereza/pabpereza/tree/main/docs/notas/MySQL/cursores.md",tags:[],version:"current",frontMatter:{},sidebar:"notas",previous:{title:"combinacion_joins",permalink:"/docs/notas/MySQL/combinacion_joins"},next:{title:"export_import",permalink:"/docs/notas/MySQL/export_import"}},i={},t=[{value:"Sintaxis b\xe1sica",id:"sintaxis-b\xe1sica",level:2},{value:"Uso con repetici\xf3n/bucles",id:"uso-con-repetici\xf3nbucles",level:2},{value:"Con repeat until - hasta que",id:"con-repeat-until---hasta-que",level:3},{value:"Con loop - todos los valores",id:"con-loop---todos-los-valores",level:3}];function u(e){const r={code:"code",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",ul:"ul",...(0,s.M)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(r.p,{children:"Un cursor es una consulta declarada que provoca que el servidor, cuando se\nrealiza la operaci\xf3n de abrir cursor, cargue en memoria los resultados de la\nconsulta en una tabla interna. Teniendo abierto el cursor, es posible, mediante\nuna sentencia FETCH, leer una a una las filas correspondientes al cursor y, por\ntanto, correspondientes a la consulta definida. Los cursores deben declararse\ndespu\xe9s de las variables locales.Los cursores nos permiten tras una consulta SQL, recuperar los resultados de la misma y poder trabajar con ellos de uno en uno."}),"\n",(0,n.jsx)(r.p,{children:"Para hacer uso de un cursor, tendremos que:"}),"\n",(0,n.jsxs)(r.ul,{children:["\n",(0,n.jsx)(r.li,{children:"Declarar el cursor (despu\xe9s de las variables locales)."}),"\n",(0,n.jsx)(r.li,{children:"Abrir el cursor."}),"\n",(0,n.jsx)(r.li,{children:"Asignar las filas al cursor seg\xfan tarea a realizar."}),"\n",(0,n.jsxs)(r.li,{children:["Cerrar el cursor una vez finalizada la tarea (",(0,n.jsx)(r.code,{children:"CLOSE"}),")"]}),"\n"]}),"\n",(0,n.jsx)(r.p,{children:"Los cursores se usan dentro de [[procedimientos_funciones]]"}),"\n",(0,n.jsx)(r.h2,{id:"sintaxis-b\xe1sica",children:"Sintaxis b\xe1sica"}),"\n",(0,n.jsxs)(r.p,{children:["Este cursor nos permite leer uno a uno los resultados de una consulta para trabajar con los datos. Cabe destacar la necesidad de abrir y cerrar el cursor (",(0,n.jsx)(r.code,{children:"OPEN"})," y ",(0,n.jsx)(r.code,{children:"CLOSE"}),")."]}),"\n",(0,n.jsxs)(r.p,{children:["Podemos leer los valores de un cursor con el comando ",(0,n.jsx)(r.code,{children:"FETCH"}),":"]}),"\n",(0,n.jsx)(r.pre,{children:(0,n.jsx)(r.code,{className:"language-sql",children:"DECLARE <variable> <tipo>\nDECLARE <nombre_cursor> CURSOR FOR <consulta>;\n\n\nOPEN <nombre_cursor>;\n\nFETCH <nombre_cursor> INTO <variable>;\n\nCLOSE <nombre_cursor>;\n"})}),"\n",(0,n.jsx)(r.h2,{id:"uso-con-repetici\xf3nbucles",children:"Uso con repetici\xf3n/bucles"}),"\n",(0,n.jsxs)(r.p,{children:["Al leer los valores de un cursor, podemos repetir el proceso de leer los valores de un cursor. Para ello, podemos usar el comando ",(0,n.jsx)(r.code,{children:"FETCH"})," repetidamente:"]}),"\n",(0,n.jsx)(r.pre,{children:(0,n.jsx)(r.code,{className:"language-sql",children:"DECLARE <nombre_cursor> CURSOR FOR <consulta>;\n\nOPEN <nombre_cursor>;\n\n\nFETCH <nombre_cursor> INTO <variable>;\nFETCH <nombre_cursor> INTO <variable>;\nFETCH <nombre_cursor> INTO <variable>;\nFETCH <nombre_cursor> INTO <variable>;\n\nCLOSE <nombre_cursor>;\n"})}),"\n",(0,n.jsx)(r.p,{children:"Pero si quisieramos leer todos los valores de un cursor, lo normal es hacer un bucle para no estar repitiendo la misma operaci\xf3n tantas veces como filas tenga el cursor."}),"\n",(0,n.jsx)(r.h3,{id:"con-repeat-until---hasta-que",children:"Con repeat until - hasta que"}),"\n",(0,n.jsxs)(r.p,{children:["Para leer valores hasta un momento espec\xedfico, podemos usar el comando ",(0,n.jsx)(r.code,{children:"REPEAT UNTIL"}),". Vamos a suponer en este caso que queremos sumar el precio de los 5 primeros resultados de un ",(0,n.jsx)(r.code,{children:"SELECT"}),"."]}),"\n",(0,n.jsx)(r.pre,{children:(0,n.jsx)(r.code,{className:"language-sql",children:"DECLARE total INT DEFAULT 0;\nDECLARE precio INT DEFAULT 0;\nDECLARE contador INT DEFAULT 1;\nDECLARE cursor1 CURSOR FOR SELECT precio FROM productos;\n\nOPEN cursor1;\n\nREPEAT\n    FETCH cursor1 INTO precio;\n\tSET total = total + precio;\n\tSET contador = contador + 1;\nUNTIL contador > 5;\nEND REPEAT;\n\nCLOSE cursor1;\n"})}),"\n",(0,n.jsx)(r.h3,{id:"con-loop---todos-los-valores",children:"Con loop - todos los valores"}),"\n",(0,n.jsxs)(r.p,{children:["Para leer todos los valores de un cursor, podemos usar el comando ",(0,n.jsx)(r.code,{children:"LOOP"}),". Vamos a suponer en este caso que queremos sumar el precio de todos los resultados de un ",(0,n.jsx)(r.code,{children:"SELECT"}),". Para ello, podemos usar el comando ",(0,n.jsx)(r.code,{children:"LOOP"}),". A\xfan as\xed, tenemos que ayudar a nuestro programa para que sepa cuando termina de leer los valores. Para ello, utilizamos un ",(0,n.jsx)(r.code,{children:"HANDLER"})," para saber cuando no hay valores y utilizar una variable auxiliar para decirle al programa que salga del ",(0,n.jsx)(r.code,{children:"LOOP"}),"."]}),"\n",(0,n.jsxs)(r.p,{children:["Cuando el handler detecta que no hay valores, el ",(0,n.jsx)(r.code,{children:"HANDLER"})," a\xf1ade a la variable auxiliar el valor ",(0,n.jsx)(r.code,{children:"1"}),". Como el bucle ",(0,n.jsx)(r.code,{children:"LOOP"})," al principio de la sentencia comprueba si la variable ",(0,n.jsx)(r.code,{children:"auxiliar"})," es igual a uno, saldr\xeda del programa gracias a la intrucci\xf3n ",(0,n.jsx)(r.code,{children:"LEAVE <nombre del bucle>"}),"."]}),"\n",(0,n.jsx)(r.pre,{children:(0,n.jsx)(r.code,{className:"language-sql",children:"DECLARE total INT DEFAULT 0;\nDECLARE precio INT DEFAULT 0;\nDECLARE auxiliar INT DEFAULT 0;\nDECLARE cursor1 CURSOR FOR SELECT precio FROM productos;\nDECLARE CONTINUE HANDLER FOR NOT FOUND SET auxiliar = 1; \n\nOPEN cursor1;\n\nbucle:LOOP\n\tFETCH cursor1 INTO precio;\n\n\tIF auxiliar = 1 THEN\n\t\tLEAVE bucle;\n\tEND IF;\n\n\tSET total = total + precio;\nEND LOOP:bucle;\n\nCLOSE cursor1;\n"})})]})}function d(e={}){const{wrapper:r}={...(0,s.M)(),...e.components};return r?(0,n.jsx)(r,{...e,children:(0,n.jsx)(u,{...e})}):u(e)}},4552:(e,r,o)=>{o.d(r,{I:()=>c,M:()=>l});var n=o(11504);const s={},a=n.createContext(s);function l(e){const r=n.useContext(a);return n.useMemo((function(){return"function"==typeof e?e(r):{...r,...e}}),[r,e])}function c(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:l(e.components),n.createElement(a.Provider,{value:r},e.children)}}}]);