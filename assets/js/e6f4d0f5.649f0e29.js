"use strict";(self.webpackChunkpabpereza=self.webpackChunkpabpereza||[]).push([[912],{39248:(e,n,o)=>{o.r(n),o.d(n,{assets:()=>d,contentTitle:()=>a,default:()=>u,frontMatter:()=>r,metadata:()=>c,toc:()=>t});var s=o(17624),i=o(4552);const r={},a=void 0,c={id:"notas/MySQL/procedimientos_funciones",title:"procedimientos_funciones",description:"Introducci\xf3n",source:"@site/docs/notas/MySQL/procedimientos_funciones.md",sourceDirName:"notas/MySQL",slug:"/notas/MySQL/procedimientos_funciones",permalink:"/docs/notas/MySQL/procedimientos_funciones",draft:!1,unlisted:!1,editUrl:"https://github.com/pabpereza/pabpereza/tree/main/docs/notas/MySQL/procedimientos_funciones.md",tags:[],version:"current",frontMatter:{},sidebar:"notas",previous:{title:"permisos",permalink:"/docs/notas/MySQL/permisos"},next:{title:"sql_variables",permalink:"/docs/notas/MySQL/sql_variables"}},d={},t=[{value:"Introducci\xf3n",id:"introducci\xf3n",level:2},{value:"Procedimientos y funciones",id:"procedimientos-y-funciones",level:2},{value:"Procedimientos",id:"procedimientos",level:2},{value:"Funciones",id:"funciones",level:2},{value:"Borrado de procedimientos y funciones",id:"borrado-de-procedimientos-y-funciones",level:2}];function l(e){const n={code:"code",h2:"h2",li:"li",p:"p",pre:"pre",ul:"ul",...(0,i.M)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.h2,{id:"introducci\xf3n",children:"Introducci\xf3n"}),"\n",(0,s.jsx)(n.p,{children:"Con el fin de mejorar la eficiencia y reutilizar las consultas SQL, se ha desarrollado una serie de procedimientos y funciones que permiten realizar operaciones de forma m\xe1s eficiente."}),"\n",(0,s.jsx)(n.p,{children:"Estos objetos se almacena en la base de datos y se pueden utilizar en las consultas SQL."}),"\n",(0,s.jsx)(n.h2,{id:"procedimientos-y-funciones",children:"Procedimientos y funciones"}),"\n",(0,s.jsx)(n.p,{children:"Sus principales diferencias son:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Valores de retorno: Los procedimientos no tienen porque retornar ning\xfan valor, mientras que las funciones siempre retornan un valor."}),"\n",(0,s.jsx)(n.li,{children:"Tipos de valores de retorno: Los procedimientos pueden mostrar resultados de cualquier tipo (listas, tablas), mientras que las funciones siempre retornan un valor concreto (int, varchar, etc.)."}),"\n",(0,s.jsx)(n.li,{children:"Par\xe1metros: Los procedimientos pueden tener par\xe1metros m\xfaltiples valores de entrada y salida (in, out, inout), mientras que las funciones siempre tienen un solo par\xe1metro de entrada y un valor de salida."}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"procedimientos",children:"Procedimientos"}),"\n",(0,s.jsx)(n.p,{children:"Los procedimientos son rutinas o subprogramas compuestos por un conjunto\nnombrado de sentencias SQL agrupados l\xf3gicamente para realizar una tarea\nespec\xedfica, que se guardan en la base de datos y que se ejecutan como una\nunidad cuando son invocados por su nombre. Es decir, nos permiten agrupar un conjuntos de sentencias para lanzarlas en bloque."}),"\n",(0,s.jsx)(n.p,{children:"El procedimiento consta de las siguientes partes:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Definici\xf3n del nombre del procedimiento."}),"\n",(0,s.jsx)(n.li,{children:"Par\xe1metros de entrada o salida"}),"\n",(0,s.jsx)(n.li,{children:"Sentencias SQL"}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"Sintaxis b\xe1sicas de procedimientos almacenados:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-sql",children:"CREATE PROCEDURE <nombre_procedimiento>\n(\n\t<parametro_entrada> <tipo>\n\t<parametro_entrada> <tipo>\n\t...\n)\n...\n"})}),"\n",(0,s.jsx)(n.p,{children:"Los par\xe1metros de entrada pueden ser de los siguientes tipos:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"IN"}),": De entrada"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"OUT"}),": De salida"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"INOUT"}),": De entrada y salida"]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"Un ejemplo completo ser\xeda el siguiente:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-sql",children:"CREATE PROCEDURE procedimiento_ejemplo (IN nombre VARCHAR(50), OUT edad INT)\nBEGIN\n\tSELECT  edad INTO edad FROM usuarios WHERE nombre = nombre ;\nEND\n"})}),"\n",(0,s.jsx)(n.p,{children:"Podemos ejecutar el procedimiento usando la siguiente sintaxis:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-sql",children:"CALL <nombre_procedimiento>(<parametro_entrada>, <parametro_salida>)\n"})}),"\n",(0,s.jsx)(n.p,{children:"Por ejemplo, para ejecutar el procedimiento anterior:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-sql",children:"CALL procedimiento_ejemplo('Pablo', @edad);\n"})}),"\n",(0,s.jsx)(n.h2,{id:"funciones",children:"Funciones"}),"\n",(0,s.jsxs)(n.p,{children:["Las funciones son rutinas o subprogramas compuestos por un conjunto. Estas siempre tiene un valor de retorno, el cu\xe1l, cuyo tipo depende de la declaraci\xf3n de la funci\xf3n con la sintaxis ",(0,s.jsx)(n.code,{children:"RETURNS <tipo>"})," y luego en el cuerpo de la funci\xf3n se devuelve con la instrucci\xf3n ",(0,s.jsx)(n.code,{children:"RETURN <valor>"}),"."]}),"\n",(0,s.jsx)(n.p,{children:"Por ejemplo, la siguiente funci\xf3n devuelve el nombre de un usuario. Primero hacemos un select que asigna el resultado a una variable y luego hacemos que la funci\xf3n devuelva el valor de la variable."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-sql",children:"CREATE FUNCTION nombre_usuario (id_usuario INT) RETURNS VARCHAR(50)\nBEGIN\n\tDECLARE nombre_obtenido VARCHAR(50);\n\n\tSELECT nombre INTO nombre_obtenido FROM usuarios WHERE id_usuario = id_usuario;\n\n\tRETURN nombre_obtenido;\nEND\n"})}),"\n",(0,s.jsx)(n.p,{children:"Podemos ejecutar la funci\xf3n usando un select:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-sql",children:"SELECT nombre_usuario(1);\n"})}),"\n",(0,s.jsx)(n.h2,{id:"borrado-de-procedimientos-y-funciones",children:"Borrado de procedimientos y funciones"}),"\n",(0,s.jsx)(n.p,{children:"Para borrar un procedimiento o funci\xf3n, se utiliza la siguiente sintaxis:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-sql",children:"DROP PROCEDURE <nombre_procedimiento>\nDROP FUNCTION <nombre_funcion>\n"})}),"\n",(0,s.jsx)(n.p,{children:"Tambi\xe9n se puede borrar un procedimiento o funci\xf3n solo si existe:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-sql",children:"DROP PROCEDURE IF EXISTS <nombre_procedimiento>\nDROP FUNCTION IF EXISTS <nombre_funcion>\n"})})]})}function u(e={}){const{wrapper:n}={...(0,i.M)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(l,{...e})}):l(e)}},4552:(e,n,o)=>{o.d(n,{I:()=>c,M:()=>a});var s=o(11504);const i={},r=s.createContext(i);function a(e){const n=s.useContext(r);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:a(e.components),s.createElement(r.Provider,{value:n},e.children)}}}]);