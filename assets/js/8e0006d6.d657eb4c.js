"use strict";(self.webpackChunkpabpereza=self.webpackChunkpabpereza||[]).push([[9544],{74464:(e,s,n)=>{n.r(s),n.d(s,{assets:()=>i,contentTitle:()=>l,default:()=>m,frontMatter:()=>d,metadata:()=>r,toc:()=>t});var a=n(17624),o=n(4552);const d={},l=void 0,r={id:"notas/MySQL/combinacion_joins",title:"combinacion_joins",description:"Hay momentos en los que una consulta necesita columnas de varias tablas. En este caso podremos definir en el FROM todas las tablas que queremos usar.",source:"@site/docs/notas/MySQL/combinacion_joins.md",sourceDirName:"notas/MySQL",slug:"/notas/MySQL/combinacion_joins",permalink:"/docs/notas/MySQL/combinacion_joins",draft:!1,unlisted:!1,editUrl:"https://github.com/pabpereza/pabpereza/tree/main/docs/notas/MySQL/combinacion_joins.md",tags:[],version:"current",frontMatter:{},sidebar:"notas",previous:{title:"comandos_basicos",permalink:"/docs/notas/MySQL/comandos_basicos"},next:{title:"cursores",permalink:"/docs/notas/MySQL/cursores"}},i={},t=[{value:"JOIN",id:"join",level:2},{value:"INNER JOIN",id:"inner-join",level:3},{value:"LEFT JOIN",id:"left-join",level:3},{value:"RIGHT JOIN",id:"right-join",level:3},{value:"FULL JOIN",id:"full-join",level:3}];function c(e){const s={code:"code",h2:"h2",h3:"h3",img:"img",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,o.M)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsxs)(s.p,{children:["Hay momentos en los que una consulta necesita columnas de varias tablas. En este caso podremos definir en el ",(0,a.jsx)(s.code,{children:"FROM"})," todas las tablas que queremos usar."]}),"\n",(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{className:"language-sql",children:"SELECT * FROM tabla1, tabla2, tabla3;\n"})}),"\n",(0,a.jsx)(s.p,{children:"Si lo hacemos de esta forma, nos devolver\xe1 todos los registros de las tablas pero al no haberlas relacionado nos mostrar\xe1 los registros de cada unos de ellas combinados entre s\xed.\nEstos datos no tendr\xedan coherencia."}),"\n",(0,a.jsxs)(s.p,{children:["Veamos un ejemplo, vamos a usar las tablas ",(0,a.jsx)(s.code,{children:"empleados"})," y la tabla ",(0,a.jsx)(s.code,{children:"departamentos"}),":"]}),"\n",(0,a.jsx)(s.p,{children:"EMPLEADOS"}),"\n",(0,a.jsxs)(s.table,{children:[(0,a.jsx)(s.thead,{children:(0,a.jsxs)(s.tr,{children:[(0,a.jsx)(s.th,{children:"id"}),(0,a.jsx)(s.th,{children:"nombre"}),(0,a.jsx)(s.th,{children:"apellidos"}),(0,a.jsx)(s.th,{children:"departamento_id"})]})}),(0,a.jsxs)(s.tbody,{children:[(0,a.jsxs)(s.tr,{children:[(0,a.jsx)(s.td,{children:"1"}),(0,a.jsx)(s.td,{children:"Pepe"}),(0,a.jsx)(s.td,{children:"P\xe9rez"}),(0,a.jsx)(s.td,{children:"1"})]}),(0,a.jsxs)(s.tr,{children:[(0,a.jsx)(s.td,{children:"2"}),(0,a.jsx)(s.td,{children:"Ana"}),(0,a.jsx)(s.td,{children:"Mu\xf1oz"}),(0,a.jsx)(s.td,{children:"1"})]}),(0,a.jsxs)(s.tr,{children:[(0,a.jsx)(s.td,{children:"3"}),(0,a.jsx)(s.td,{children:"Juan"}),(0,a.jsx)(s.td,{children:"Gonz\xe1lez"}),(0,a.jsx)(s.td,{children:"2"})]}),(0,a.jsxs)(s.tr,{children:[(0,a.jsx)(s.td,{children:"4"}),(0,a.jsx)(s.td,{children:"Mar\xeda"}),(0,a.jsx)(s.td,{children:"Rubio"}),(0,a.jsx)(s.td,{children:"2"})]})]})]}),"\n",(0,a.jsx)(s.p,{children:"DEPARTAMENTOS"}),"\n",(0,a.jsxs)(s.table,{children:[(0,a.jsx)(s.thead,{children:(0,a.jsxs)(s.tr,{children:[(0,a.jsx)(s.th,{children:"id"}),(0,a.jsx)(s.th,{children:"nombre"})]})}),(0,a.jsxs)(s.tbody,{children:[(0,a.jsxs)(s.tr,{children:[(0,a.jsx)(s.td,{children:"1"}),(0,a.jsx)(s.td,{children:"Ingenier\xeda"})]}),(0,a.jsxs)(s.tr,{children:[(0,a.jsx)(s.td,{children:"2"}),(0,a.jsx)(s.td,{children:"Finanzas"})]})]})]}),"\n",(0,a.jsx)(s.p,{children:"Si quisi\xe9ramos mostrar los empleados junto con los nombres de su departamento, podr\xedamos hacerlo de la siguiente forma:"}),"\n",(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{className:"language-sql",children:"SELECT empleados.nombre, empleados.apellidos, departamentos.nombre FROM empleados, departamentos WHERE empleados.departamento_id = departamentos.id;\n"})}),"\n",(0,a.jsxs)(s.p,{children:["Cuando seleccionamos datos de varias tablas tenemos que difinir en el ",(0,a.jsx)(s.code,{children:"WHERE"})," la relaci\xf3n entre ellas. En este caso, el ",(0,a.jsx)(s.code,{children:"id"})," de la tabla ",(0,a.jsx)(s.code,{children:"empleados"})," y el ",(0,a.jsx)(s.code,{children:"departamento_id"})," de la tabla ",(0,a.jsx)(s.code,{children:"departamentos"})," porque es la \xfanica forma de mostrar el nombre del departamento al que pertenece cada empleado."]}),"\n",(0,a.jsx)(s.h2,{id:"join",children:"JOIN"}),"\n",(0,a.jsxs)(s.p,{children:["El ",(0,a.jsx)(s.code,{children:"JOIN"})," es una forma de relacionar dos tablas y tiene varios comandos. La consulta anterior es un ejemplo de ",(0,a.jsx)(s.code,{children:"INNER JOIN"})," realizado con un ",(0,a.jsx)(s.code,{children:"WHERE"}),". Existen varios tipos de ",(0,a.jsx)(s.code,{children:"JOIN"})," en funci\xf3n de la informaci\xf3n que quieras obtener de dos tablas relacionadas."]}),"\n",(0,a.jsxs)(s.p,{children:["El m\xe1s com\xfan es el ",(0,a.jsx)(s.code,{children:"INNER JOIN"})," que nos permite obtener los registros de una tabla que est\xe1n relacionados con otra."]}),"\n",(0,a.jsx)(s.p,{children:(0,a.jsx)(s.img,{src:"https://www.dofactory.com/img/sql/sql-joins.png",alt:"Representaci\xf3n visual de los diferentes tipos de joins"})}),"\n",(0,a.jsx)(s.p,{children:"Aunque son los m\xe1s comunes, hay m\xe1s tipos de los que se muestran en la representaci\xf3n visual. De momento nos centraremos en los m\xe1s comunes:"}),"\n",(0,a.jsx)(s.h3,{id:"inner-join",children:"INNER JOIN"}),"\n",(0,a.jsxs)(s.p,{children:["El ",(0,a.jsx)(s.code,{children:"INNER JOIN"})," nos permite seleccionar los registros que tengan coincidencias en ambas tablas, es decir, que est\xe9n relacionados. Para ello, en el ",(0,a.jsx)(s.code,{children:"FROM"})," seleccionamos la tabla de la que queremos obtener los registros y en el ",(0,a.jsx)(s.code,{children:"JOIN"})," seleccionamos la tabla con la que queremos relacionar. Por \xfaltimo, tendr\xedamos que definir en el ",(0,a.jsx)(s.code,{children:"ON"})," del ",(0,a.jsx)(s.code,{children:"JOIN"})," la relaci\xf3n entre ambas tablas de la misma forma que en el ",(0,a.jsx)(s.code,{children:"WHERE"})," de la consulta anterior."]}),"\n",(0,a.jsx)(s.p,{children:"Ejemplo:"}),"\n",(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{className:"language-sql",children:"SELECT empleados.nombre, empleados.apellidos, departamentos.nombre FROM empleados JOIN departamentos ON empleados.departamento_id = departamentos.id;\n"})}),"\n",(0,a.jsx)(s.h3,{id:"left-join",children:"LEFT JOIN"}),"\n",(0,a.jsxs)(s.p,{children:["El ",(0,a.jsx)(s.code,{children:"LEFT JOIN"})," nos permite seleccionar todos los registros de la tabla de la izquierda junto con los registros de la tabla de la derecha que tengan coincidencias."]}),"\n",(0,a.jsx)(s.p,{children:"Ejemplo de uso:"}),"\n",(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{className:"language-sql",children:"SELECT empleados.nombre, empleados.apellidos, departamentos.nombre FROM empleados LEFT JOIN departamentos ON empleados.departamento_id = departamentos.id;\n"})}),"\n",(0,a.jsx)(s.h3,{id:"right-join",children:"RIGHT JOIN"}),"\n",(0,a.jsxs)(s.p,{children:["El ",(0,a.jsx)(s.code,{children:"RIGHT JOIN"})," nos permite seleccionar todos los registros de la tabla de la derecha junto con los registros de la tabla de la izquierda que tengan coincidencias."]}),"\n",(0,a.jsx)(s.p,{children:"Ejemplo de uso:"}),"\n",(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{className:"language-sql",children:"SELECT empleados.nombre, empleados.apellidos, departamentos.nombre FROM empleados RIGHT JOIN departamentos ON empleados.departamento_id = departamentos.id;\n"})}),"\n",(0,a.jsx)(s.h3,{id:"full-join",children:"FULL JOIN"}),"\n",(0,a.jsxs)(s.p,{children:["El ",(0,a.jsx)(s.code,{children:"FULL JOIN"})," nos permite seleccionar todos los registros de la tabla de la izquierda junto con los registros de la tabla de la derecha aunque no tengan coincidencias."]}),"\n",(0,a.jsx)(s.p,{children:"Ejemplo de uso:"}),"\n",(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{className:"language-sql",children:"SELECT empleados.nombre, empleados.apellidos, departamentos.nombre FROM empleados FULL JOIN departamentos ON empleados.departamento_id = departamentos.id;\n"})})]})}function m(e={}){const{wrapper:s}={...(0,o.M)(),...e.components};return s?(0,a.jsx)(s,{...e,children:(0,a.jsx)(c,{...e})}):c(e)}},4552:(e,s,n)=>{n.d(s,{I:()=>r,M:()=>l});var a=n(11504);const o={},d=a.createContext(o);function l(e){const s=a.useContext(d);return a.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function r(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:l(e.components),a.createElement(d.Provider,{value:s},e.children)}}}]);